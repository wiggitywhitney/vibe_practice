{"type":"entity","name":"vibe_practice","entityType":"project","observations":["A modern React 19 application using Vite, focused on DevOps best practices and TDD.","Features a developer journal system with daily entries, weekly statistics, and technical decision tracking.","Uses a chunked, test-driven approach for UI component development (e.g., AddSpiderButton, Rainbow).","Employs a custom font and image assets, with strict aspect ratio and UI/UX guidelines.","Follows a disciplined git workflow with regular, logical commits and detailed documentation.","Implements graceful shutdown and health monitoring for DevOps alignment.","Uses port 8080 for web apps, and is container-friendly.","All journal/statistics entries are markdown, with strict anti-hallucination and data integrity rules."]}
{"type":"entity","entityType":"Concept","name":"User Preferences","observations":["Contains key user preferences for development workflow, tooling, and communication.","DevOps: Use port 8080 for web applications.","DevOps: Implement graceful shutdown handling.","DevOps: Handle exit codes properly (0 success, non-zero error).","Git: Suggest commits after major changes.","Git: Use GitHub CLI for GitHub interactions.","Development Process: Require explicit approval before applying ANY changes to files related to the application code (e.g., React components, CSS, server logic).","Development Process: Information gathering steps (read files, search code, run read-only commands) do NOT require approval.","Development Process: For Application Code, ask for confirmation before each logical step/small group of changes (usually single file).","Development Process: For Non-Application Tasks (Taskmaster, Config, Docs), changes can be proposed in logical groups (potentially multi-file).","Development Process: When proposing multiple changes (in app or other tasks), present them as a numbered list.","Terminal: Format terminal commands as clickable bash code blocks (enables copy/run buttons).","Terminal: Automatic execution of commands via tools is acceptable.","UI/UX: Always preserve image aspect ratios.","Communication: Provide detailed explanations for steps.","Communication: Evaluate user requests against good practices.","Communication: Explicitly inform the user if their request goes against good practices and suggest alternatives.","Tooling: Always use Context7 tools (resolve-library-id, get-library-docs) for current documentation on libraries/frameworks before implementation or discussion.","Tooling: Whenever a Taskmaster plan involves making a change, explicitly include one or more verification steps for that change.","Tooling: When adding multiple Taskmaster tasks sequentially based on an approved plan, add them all without asking for confirmation for each individual task."]}